from sbs_utils.agent import Agent
from sbs_utils.helpers import FakeEvent
from sbs_utils.helpers import FrameContext
from sbs_utils.pages.widgets.layout_listbox import SubPage
from sbs_utils.tickdispatcher import TickDispatcher
def gui_page_for_client (client_id):
    ...
def gui_percent_from_pixels (client_id, pixels):
    ...
def gui_task_for_client (client_id):
    ...
def tabbed_panel_control (tag_prefix, items, tab=0, tab_location=0):
    ...
class TabbedPanel(Column):
    """class TabbedPanel"""
    def __init__ (self, left, top, right, bottom, tag_prefix, panels=None, tab=0, tab_location=0, icon_size=0) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""
    def _present (self, event):
        ...
    def find_tab (self, tab):
        ...
    def on_end_presenting (self, client_id):
        ...
    def on_message (self, event):
        ...
    def present (self, event):
        ...
    def present_icon (self, event, icon, index, icon_size):
        ...
    def present_panel (self, event, panel, icon_size):
        ...
    def set_tab (self, tab):
        ...
    def set_tab_tick_cb (self, cb):
        ...
    def tick_tab (self, t):
        ...
    @property
    def value (self):
        ...
    @value.setter
    def value (self, v):
        ...

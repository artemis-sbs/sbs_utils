from sbs_utils.mast.pollresults import PollResults
class AwaitBlockPromise(Promise):
    """class AwaitBlockPromise"""
    def __init__ (self, timeout=None) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""
    def initial_poll (self):
        ...
    def poll (self):
        ...
class Promise(object):
    """class Promise"""
    def __init__ (self) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""
    def cancel (self, msg=None):
        ...
    def canceled (self):
        ...
    def done (self):
        ...
    def exception (self):
        ...
    def poll (self):
        ...
    def result (self):
        ...
    def rewind (self):
        ...
    def set_exception (self, ex):
        ...
    def set_result (self, result):
        ...
class PromiseAllAny(Promise):
    """class PromiseAllAny"""
    def __init__ (self, proms, all) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""
    def cancel (self, msg=None):
        ...
    def cancelled (self):
        ...
    def done (self):
        ...
    def result (self):
        ...
    def set_exception (self, ex):
        ...
    def set_result (self, result):
        ...
class PromiseWaiter(Waiter):
    """class PromiseWaiter"""
    def __init__ (self, promise) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""
    def get_waiter (self):
        ...
class Trigger(object):
    """class Trigger"""
    def dequeue (self):
        ...
    def test (self):
        ...
class Waiter(object):
    """class Waiter"""
    def get_waiter (self):
        ...

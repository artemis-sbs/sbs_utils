from sbs_utils.mast.core_nodes.decorator_label import DecoratorLabel
def STRING_REGEX_NAMED (name):
    ...
def get_artemis_audio_dir ():
    ...
def get_artemis_graphics_dir ():
    ...
def get_mod_dir (mod):
    ...
def get_script_dir ():
    ...
def mast_node (append=True):
    ...
class MediaLabel(DecoratorLabel):
    """class MediaLabel"""
    def __init__ (self, kind, path, display_name, if_exp=None, q=None, loc=None, compile_info=None):
        """Initialize self.  See help(type(self)) for accurate signature."""
    def _add (id, obj):
        ...
    def _remove (id):
        ...
    def can_fallthrough (self, parent):
        ...
    def clear ():
        ...
    def get (id):
        ...
    def get_as (id, as_cls):
        ...
    def get_objects_from_set (the_set):
        ...
    def get_of_type (kind, task):
        ...
    def get_role_object (link_name):
        ...
    def get_role_objects (role):
        ...
    def get_role_set (role):
        ...
    def has_inventory_list (collection_name):
        ...
    def has_inventory_set (collection_name):
        ...
    def has_links_list (collection_name):
        ...
    def has_links_set (collection_name):
        ...
    def parse (lines):
        ...
    def remove_id (id):
        ...
    def resolve_id (other: 'Agent | CloseData | int'):
        ...
    def resolve_py_object (other: 'Agent | CloseData | int'):
        ...
    def test (self, task):
        ...
    def test_file (self):
        ...
    def true_path (self):
        ...
